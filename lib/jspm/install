#!/usr/bin/env bash
set -o errexit
set -o nounset
# set -o xtrace
set -o pipefail

eval "$(prototypical base "$@")"
echo "Creating prototypical Node.js project at ${path}" >&2

echo 'Adding .gitignore' >&2
cat <<TEXT > '.gitignore'
/node_modules
/jspm_packages
TEXT

echo 'Appending to README.md' >&2
cat <<MARKDOWN >> README.md
[![Code Climate](https://codeclimate.com/github/${github_username}/${project_dir}/badges/gpa.svg)](https://codeclimate.com/github/${github_username}/${project_dir})
MARKDOWN

echo 'Adding to .travis.yml' >&2
ruby -r 'yaml' <<RUBY
travis_config = YAML.load_file('.travis.yml')
File.write '.travis.yml', YAML.dump(
  'language' => 'node_js',
  'node_js' => ['0.12'],
  'before_install' => travis_config['before_install']
)
RUBY

echo 'Adding package.json' >&2
node <<JAVASCRIPT
function version(packageName) {
  return require('child_process')
    .execSync('npm show ' + packageName + ' version', {encoding: 'utf8'})
    .trim();
}

require('fs').writeFileSync('package.json', JSON.stringify({
  name: process.env['project_dir'],
  devDependencies: {
    'jspm': '^' + version('jspm')
  },
  private: true
}, null, 2) + '\\n');
JAVASCRIPT

echo 'Setting Up npm' >&2
npm install >&2

echo 'Setting Up jspm' >&2
jspm='node_modules/.bin/jspm'
$jspm init -y >&2
$jspm install 'npm:express'

for lib in 'fs' 'path'
do
	$jspm install "$lib=github:jspm/nodelibs-$lib"
done

cat <<'HTML' > 'index.html'
<!DOCTYPE html>
<meta charset="UTF-8">
<script src="jspm_packages/system.js"></script>
<script src="config.js"></script>
<script>
  System.import('babel/polyfill')
    .then(function() {
      return System.import('./index');
    })
    .catch(function(error) {
      process.stdout.write(error.message + '\n');
    });
</script>
HTML

cat <<'JAVASCRIPT' > 'server.js'
var System = require('jspm').Loader();
System.import('babel/polyfill')
  .then(function() {
    return System.import('./app');
  })
  .catch(function(error) {
    process.stdout.write(error.message + '\n');
  });
JAVASCRIPT

cat <<'JAVASCRIPT' > 'app.js'
import fs from 'fs'
import path from 'path'
import express from 'express';

const app = express();

app.use(express.static('.'));

const server = app.listen(8080, () => {
  const {address, port} = server.address();
  process.stdout.write(`Listening on http://${address}:${port}\n`);
});
JAVASCRIPT

cat <<'JAVASCRIPT' > 'add.js'
export default function add(textContent) {
  const p = Object.assign(document.createElement('p'), {textContent});
  document.body.appendChild(p);
}
JAVASCRIPT

cat <<'JAVASCRIPT' > 'index.js'
import add from './add';
add('Hello World!');
JAVASCRIPT
